{
    "project_data": {
        "createdAtMs": "1738568195000",
        "creationBase": "NONE",
        "dataMountPath": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2",
        "description": "New project",
        "id": "0194cabd-5b14-7c75-8249-82f8d69013c2",
        "llm": "gpt-3.5-turbo",
        "name": "US Tax Form 1099 App",
        "owner": "e741c4f6-0311-4321-8225-bd56cfadf50b",
        "ownerPublicId": "sneha.vejju_instabase.com",
        "projectMountPath": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2",
        "repoId": "98821aa8-fd02-43d9-9ae0-2b958213c050",
        "schemaVersion": "1",
        "settings": {
            "advanced_ocr": {
                "isChangeLanguageType": false,
                "isSelectCheckboxes": true,
                "isSelectFileAsImage": false,
                "isSelectTables": true,
                "languageType": "standard",
                "nativeExcelProcessing": true,
                "pagesText": "",
                "splitByPage": false,
                "version": "v1"
            }
        },
        "type": "BUILD",
        "updatedAtMs": "1741257629000",
        "workspace": "SolEng_workspace"
    },
    "project_schema": {
        "Certain Government Payments": {
            "class_id": "144676",
            "description": "",
            "fields": [
                {
                    "data_type": "TEXT",
                    "description": "Extract only the payer's full name from the first line of the top-left section on form 1099-G.\nThe name is fully uppercase and appears above the address.\nExclude all other details such as street address, city, state, ZIP code, and phone number.\nReturn exactly what is written, preserving spaces and capitalization.",
                    "field_id": "432852",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Name",
                    "position": 0,
                    "prompt": "Name",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the payer's address from the top left section of the document, located directly below the payer's name. Ensure the extracted address includes the street, city, state, and ZIP code. Output the result in a structured format: {Street Address}, {City}, {State} {ZIP Code}",
                    "field_id": "438774",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Payer Address",
                    "position": 1,
                    "prompt": "Payer Address",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract PAYER'S phone number located under the payer's address eg: (+X) XXX-XXX-XXXX or (XXX) XXX-XXXX",
                    "field_id": "438775",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Payer Phone Number",
                    "position": 2,
                    "prompt": "Payer Phone Number",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract recipient name located on top-left corner above the recipient's address",
                    "field_id": "438777",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Recipient Name",
                    "position": 3,
                    "prompt": "Recipient Name",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the recipient's address from the top left section of the document, located directly below the payer's name. Ensure the extracted address includes the street, city, state, and ZIP code. Output the result in a structured format: {Street Address}, {City}, {State} {ZIP Code}",
                    "field_id": "438778",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Recipient Address",
                    "position": 4,
                    "prompt": "Recipient Address",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "payer TIN",
                    "field_id": "438780",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Payer TIN",
                    "position": 5,
                    "prompt": "Payer TIN",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "recipient TIN",
                    "field_id": "438782",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Recipient TIN",
                    "position": 6,
                    "prompt": "Recipient TIN",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "account number",
                    "field_id": "438783",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Account Number",
                    "position": 7,
                    "prompt": "Account Number",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Form name located in down-left side of the document",
                    "field_id": "438785",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Form Name",
                    "position": 8,
                    "prompt": "Form Name",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "for calendar year",
                    "field_id": "438835",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "For Calendar Year",
                    "position": 9,
                    "prompt": "For Calendar Year",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 2b labeled 'unemployment compensation' from form 1099-DIV. This value is monetary figure in dollars formatted in eg: $XXXX.XX format.",
                    "field_id": "438836",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Unemployment Compensation",
                    "position": 10,
                    "prompt": "Unemployment Compensation",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Locate the dollar amount inside the second box of the main value table on Form 1099-G. This amount corresponds to state or local income tax refunds, credits, or offsets. Extract only the numerical dollar value, typically formatted as $X,XXX.XX, positioned in the row immediately to the right of the Box 2 label. Exclude any extra symbols, text labels, or punctuation. Focus on the structured table's second row to capture only the intended monetary value regardless of minor layout shifts.",
                    "field_id": "438837",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "State or Local Income Tax",
                    "position": 11,
                    "prompt": "State or Local Income Tax",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 4 labeled 'federal income tax withheld' from form 1099-G. This value is monetary figure formatted in eg:$XXXX.XX format.",
                    "field_id": "438838",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Federal Income Tax Withheld",
                    "position": 12,
                    "prompt": "Federal Income Tax Withheld",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 5 labeled 'RTAA payments' from form 1099-G. This value is monetary figure formatted in eg: $XXXX.XX format.",
                    "field_id": "438839",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "RTAA Payments",
                    "position": 13,
                    "prompt": "RTAA Payments",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "taxable grants",
                    "field_id": "438840",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Taxable Grants",
                    "position": 14,
                    "prompt": "Taxable Grants",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 7 labeled 'agriculture payments' from form 1099-G. This value is monetary figure formatted in eg: $XXXX.XX format.",
                    "field_id": "438841",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Agriculture Payments",
                    "position": 15,
                    "prompt": "Agriculture Payments",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 9 labeled 'market gain' from form 1099-G. This value is monetary figure in dollars formatted in eg: $XXXX.XX format.",
                    "field_id": "438842",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Market Gain",
                    "position": 16,
                    "prompt": "Market Gain",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                }
            ]
        },
        "Dividends and Distributions": {
            "class_id": "144675",
            "description": "",
            "fields": [
                {
                    "data_type": "TEXT",
                    "description": "Extract the payer's full name from the top-left section of the document, ensuring it appears exactly as written, including middle initials if present",
                    "field_id": "432851",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Name",
                    "position": 0,
                    "prompt": "Name",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the payer's address from the top left section of the document, located directly below the payer's name. Ensure the extracted address includes the street, city, state, and ZIP code. Output the result in a structured format: {Street Address}, {City}, {State} {ZIP Code}",
                    "field_id": "432853",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Address",
                    "position": 1,
                    "prompt": "Address",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract PAYER'S phone number located under the payer's address eg: (+X) XXX-XXX-XXXX or (XXX) XXX-XXXX",
                    "field_id": "438429",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Payer Phone Number",
                    "position": 2,
                    "prompt": "Payer Phone Number",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "payer TIN",
                    "field_id": "438430",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Payer TIN",
                    "position": 3,
                    "prompt": "Payer TIN",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Recipient TIN",
                    "field_id": "438431",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Recipient TIN",
                    "position": 4,
                    "prompt": "Recipient TIN",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract recipient name.",
                    "field_id": "438432",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Recipient Name",
                    "position": 5,
                    "prompt": "Recipient Name",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the recipient's address from the middle section of the document, located directly below the recipient's name. Ensure the extracted address includes the street, city, state, and ZIP code. Output the result in a structured format: {Street Address}, {City}, {State} {ZIP Code}",
                    "field_id": "438433",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Recipient Address",
                    "position": 6,
                    "prompt": "Recipient Address",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "account number",
                    "field_id": "438434",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Account Number",
                    "position": 7,
                    "prompt": "Account Number",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "What is the total amount of Ordinary Dividends? Output must contain only float value.",
                    "field_id": "438435",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Total Ordinary Dividends",
                    "position": 8,
                    "prompt": "What is the total amount of Ordinary Dividends? Provide only the float value.",
                    "prompt_schema": null,
                    "prompt_type": "advanced"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the form title located at the top of the document. The title typically starts with 'Form' followed by the form number (e.g., 'Form 1099-DIV'). Extract from under OMB number.",
                    "field_id": "438590",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Form Type Name",
                    "position": 9,
                    "prompt": "Form Type Name",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the year for calendar year from the top-right corner of the 1099-DIV form.",
                    "field_id": "438591",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "For Calendar Year",
                    "position": 10,
                    "prompt": "For Calendar Year",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the Qualified Dividends amount from Box 1b of Form 1099-DIV. The value is always a monetary figure in dollars, formatted as $XXXX.XX.",
                    "field_id": "438592",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Qualified Dividends",
                    "position": 11,
                    "prompt": "Qualified Dividends",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the total capital gain distributions amount from box 2a of the form 1099-DIV the value is always monetary figure in dollars. Formatted in eg: $ XX,XXX.XX format.",
                    "field_id": "438593",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Total Capital Gain Distributions",
                    "position": 12,
                    "prompt": "Total Capital Gain Distributions",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 2b labeled 'unrecap sec 1250 gain' from form 1099-DIV. This value is monetary figure in dollars formatted in eg: $XXXX.XX format.",
                    "field_id": "438594",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Unrecap Sec 1250 Gain",
                    "position": 13,
                    "prompt": "Unrecap Sec 1250 Gain",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the dollar amount from box 2c labeled \"section 1202 gain\" from 1099-DIV form. This value is monetary figure in dollars formatted eg: $XXXX.XX format.",
                    "field_id": "438595",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Section 1202 Gain",
                    "position": 14,
                    "prompt": "Section 1202 Gain",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the amount from Box 2d labeled 'Collectibles (28%) gain' on Form 1099-DIV. This value is monetary figure in dollars (formatted as eg: '$XXXX.XX' format)",
                    "field_id": "438606",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Collectibles Gain",
                    "position": 15,
                    "prompt": "Collectibles Gain",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 2e labeled 'section 897 ordinary dividends' from form 1099-DIV. This value is monetary figure in dollars formatted in eg: $XXXX.XX format.",
                    "field_id": "438607",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Section 897 Ordinary Dividends",
                    "position": 16,
                    "prompt": "Section 897 Ordinary Dividends",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 2f labeled 'section 897 capital gain' in form 1099-DIV. This value is monetary figure in dollars formatted in eg: $XXXX.XX format.",
                    "field_id": "438608",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Section 897 Capital Gain",
                    "position": 17,
                    "prompt": "Section 897 Capital Gain",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 3 labeled 'nondividend distributions' from form 1099-DIV. This value is monetary figure in dollars formatted in eg: $XXXXX.XX format.",
                    "field_id": "438657",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Non Dividend Distributions",
                    "position": 18,
                    "prompt": "Non Dividend Distributions",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 4 labeled 'federal income tax withheld' from form 1099-DIV. This value is monetary figure in dollars formatted in eg: $XXXX.XX format.",
                    "field_id": "438759",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Federal Income Tax Withheld",
                    "position": 19,
                    "prompt": "Federal Income Tax Withheld",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 5, labelled- \"section 199A\" from form 1099-DIV. This value is monetary figure in dollars formatted eg: $XXXX.XX format.",
                    "field_id": "438760",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Section 199A Dividends",
                    "position": 20,
                    "prompt": "Section 199A Dividends",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the dollar amount from box 6, labelled 'investment expenses' on form 1099-DIV. This value is monetary figure in dollars formatted eg: $ XXXX.XX format.",
                    "field_id": "438761",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Investment Expenses",
                    "position": 21,
                    "prompt": "Investment Expenses",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 7, labelled 'foreign tax paid' on form 1099-DIV. This value is monetary figure in dollars formatted eg: $XXXX.XX format.",
                    "field_id": "438763",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Foreign Tax Paid",
                    "position": 22,
                    "prompt": "Foreign Tax Paid",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from Box 9- bottom right of the document, labeled 'Cash liquidation distributions,' on Form 1099-DIV. The value is monetary figure in dollars formatted in eg: $XXXX.XX format.",
                    "field_id": "438764",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Cash Liquidation Distributions",
                    "position": 23,
                    "prompt": "Cash Liquidation Distributions",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 11, labelled- \"non cash liquidation distributions\" from form 1099-DIV. This value is monetary figure in dollars formatted eg: $XXXX.XX format.",
                    "field_id": "438766",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Non Cash Liquidation Distributions",
                    "position": 24,
                    "prompt": "Non Cash Liquidation Distributions",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Locate and extract the dollar amount from Box 12 labeled exactly as 'Exempt-interest dividends' on Form 1099-DIV. The value is a dollar figure formatted as $XX,XXX.XX or $X,XXX.XX and is positioned directly to the right of Box 12, inside the structured table. Do not extract any symbols, words, or characters other than the digits and decimal of the amount itself. Only return the clean numeric value exactly as shown in Box 12.",
                    "field_id": "438768",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Exempt Interest Dividends",
                    "position": 25,
                    "prompt": "Exempt Interest Dividends",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 13, labelled 'specified private activity bond interest dividends' on form 1099-DIV. This value is monetary figure in dollars formatted eg: $XXXX.XX format.",
                    "field_id": "438770",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Specified Private Activity Bond Interest",
                    "position": 26,
                    "prompt": "Specified Private Activity Bond Interest",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                }
            ]
        },
        "Interest Income": {
            "class_id": "137241",
            "description": "",
            "fields": [
                {
                    "data_type": "TEXT",
                    "description": "Extract the payer's address from the top left section of the document, located directly below the payer's name. Ensure the extracted address includes the street, city, state, and ZIP code. Output the result in a structured format: {Street Address}, {City}, {State} {ZIP Code}",
                    "field_id": "438306",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Payer Address",
                    "position": 1,
                    "prompt": "Payer Address",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Payer TIN",
                    "field_id": "438308",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Payer TIN",
                    "position": 3,
                    "prompt": "Payer TIN",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Recipient TIN",
                    "field_id": "438309",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Recipient TIN",
                    "position": 4,
                    "prompt": "Recipient TIN",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the recipient's full name from the middle section, ensuring it appears exactly as written, including middle initials if present",
                    "field_id": "438310",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Recipient Name",
                    "position": 5,
                    "prompt": "Recipient Name",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the recipient's address from the middle section of the document, located directly below the recipient's name. Ensure the extracted address includes the street, city, state, and ZIP code. Output the result in a structured format: {Street Address}, {City}, {State} {ZIP Code}",
                    "field_id": "438311",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Recipient Address",
                    "position": 6,
                    "prompt": "Recipient Address",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Account Number",
                    "field_id": "438312",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Account Number",
                    "position": 7,
                    "prompt": "Account Number",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the form title located at the top right of the document. The title starts with 'Form' followed by the form number and name (e.g., 'Form 1099-DIV'). Return only the full form title exactly as it appears.",
                    "field_id": "438313",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Form Name",
                    "position": 8,
                    "prompt": "Form Name",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "For calendar year",
                    "field_id": "438314",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "For Calendar Year",
                    "position": 9,
                    "prompt": "For Calendar Year",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Identify the section labeled 'Interest income' on the document. Extract the dollar amount listed in Box 1, ensuring it includes both the numeric value and decimal points. Ignore any other financial data.",
                    "field_id": "438315",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Interest Income",
                    "position": 10,
                    "prompt": "Interest Income",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the numeric value associated with 'Early withdrawal penalty' from Box 2, ensuring the extraction is from the correct labeled field. The number should be in a monetary format (e.g., $1500.00) and accurately extracted from the correct row.",
                    "field_id": "438316",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Early Withdrawal Penalty",
                    "position": 11,
                    "prompt": "Early Withdrawal Penalty",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Federal income tax withheld",
                    "field_id": "438317",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Federal Income Tax Withheld",
                    "position": 12,
                    "prompt": "Federal Income Tax Withheld",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Investment expenses",
                    "field_id": "438318",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Investment Expenses",
                    "position": 13,
                    "prompt": "Investment Expenses",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract Foreign tax paid",
                    "field_id": "438319",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Foreign Tax Paid",
                    "position": 14,
                    "prompt": "Foreign Tax Paid",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the dollar amount from box 8, titled- 'Tax exempt interest'.",
                    "field_id": "438320",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Tax Exempt Interest",
                    "position": 15,
                    "prompt": "Tax Exempt Interest",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Specified private activity bond Interest.\nLocated in 9th table.",
                    "field_id": "438321",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Specified Private Activity Bond Interest",
                    "position": 16,
                    "prompt": "Specified Private Activity Bond Interest",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract market discount price from the document",
                    "field_id": "438322",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Market Discount",
                    "position": 17,
                    "prompt": "Market Discount",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "if starts-with \"Bond premium\" then extract the data located in box number 11.",
                    "field_id": "438323",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Bond Premium",
                    "position": 18,
                    "prompt": "Bond Premium",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the dollar amount listed in Box 12 labeled 'Bond premium on Treasury obligations' from the form. Capture only the exact monetary value as displayed, including the dollar sign, commas, and decimal points. Do not extract any additional text, labels, or nearby values.",
                    "field_id": "438324",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Bond Premium on Treasury Obligations",
                    "position": 19,
                    "prompt": "Bond Premium on Treasury Obligations",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract \"Bond premium on tax exempt bond\" amount from the form.",
                    "field_id": "438325",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Bond Premium on Tax Exempt Bond",
                    "position": 20,
                    "prompt": "Bond Premium on Tax Exempt Bond",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the payer's full name from the top-left section, ensuring it appears exactly as written, including middle initials if present",
                    "field_id": "438416",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Payer Name",
                    "position": 0,
                    "prompt": "Payer Name",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the payer's phone number from Form 1099-INT. The phone number is located directly below the payer's address and follows the format (XXX) XXX-XXXX or (+X) XXX-XXX-XXXX.",
                    "field_id": "440120",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Payer Phone Number",
                    "position": 2,
                    "prompt": "Payer Phone Number",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                }
            ]
        },
        "MISC": {
            "class_id": "144678",
            "description": "",
            "fields": [
                {
                    "data_type": "TEXT",
                    "description": "Extract the payer's full name from the top-left section, ensuring it appears exactly as written, including middle initials if present",
                    "field_id": "438906",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Payer Name",
                    "position": 0,
                    "prompt": "Payer Name",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the payer's address from the top left section of the document, located directly below the payer's name. Ensure the extracted address includes the street, city, state, and ZIP code. Output the result in a structured format: {Street Address}, {City}, {State} {ZIP Code}",
                    "field_id": "438907",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Payer Address",
                    "position": 1,
                    "prompt": "Payer Address",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the payer's phone number from Form 1099-INT. The phone number is located directly below the payer's address and follows the format (XXX) XXX-XXXX or (+X) XXX-XXX-XXXX.",
                    "field_id": "438908",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Payer Phone Number",
                    "position": 2,
                    "prompt": "Payer Phone Number",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "payer TIN",
                    "field_id": "438909",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Payer TIN",
                    "position": 3,
                    "prompt": "Payer TIN",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "recipient TIN",
                    "field_id": "438910",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Recipient TIN",
                    "position": 4,
                    "prompt": "Recipient TIN",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "recipient name",
                    "field_id": "438911",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Recipient Name",
                    "position": 5,
                    "prompt": "Recipient Name",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the recipient's address from the top left section of the document, located directly below the payer's name. Ensure the extracted address includes the street, city, state, and ZIP code. Output the result in a structured format: {Street Address}, {City}, {State} {ZIP Code}",
                    "field_id": "438912",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Recipient Address",
                    "position": 6,
                    "prompt": "Recipient Address",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "account number",
                    "field_id": "438913",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Account Number",
                    "position": 7,
                    "prompt": "Account Number",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Locate Box 1 on Form 1099-MISC, labeled exactly as \"Rents.\" \nExtract only the numeric dollar amount immediately to the right of this label in the same horizontal row.\nThe value will be formatted as digits, may include commas, and have exactly two decimal places (e.g., 1450.00).\nExclude symbols like \"$\", extra spaces, or words.\nIgnore values from any other boxes or labels, even if they are nearby.\nReturn only the raw numeric value from Box 1.",
                    "field_id": "439010",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Rents",
                    "position": 8,
                    "prompt": "Rents",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the dollar amount from box-2 labeled 'royalties'. This value is monetary in dollars formatted in $ XXXX.XX format.",
                    "field_id": "439013",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Royalties",
                    "position": 9,
                    "prompt": "Royalties",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract only the numeric dollar amount from Box 3 labeled 'Other income' on Form 1099-MISC. The amount is located in the structured table to the right of Box 3 and is formatted as $X,XXX.XX or $XX,XXX.XX. Exclude any symbols, labels, or extra characters\u2014return only the clean numeric value exactly as printed in Box 3.",
                    "field_id": "439014",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Other Income",
                    "position": 10,
                    "prompt": "Other Income",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Form name located in down-left side of the document.\nIf starts-with \"Form\" then extract the data",
                    "field_id": "439015",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Form Type",
                    "position": 11,
                    "prompt": "Form Type",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "for calendar year",
                    "field_id": "439017",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "For Calendar Year",
                    "position": 12,
                    "prompt": "For Calendar Year",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the dollar amount from box 4, labeled- 'federal income tax withheld'.",
                    "field_id": "439018",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Federal Income Tax Withheld",
                    "position": 13,
                    "prompt": "Federal Income Tax Withheld",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "fishing boat proceeds",
                    "field_id": "439020",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Fishing Boat Proceeds",
                    "position": 14,
                    "prompt": "Fishing Boat Proceeds",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "medical and healthcare payments",
                    "field_id": "439022",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Medical and Healthcare Payments",
                    "position": 15,
                    "prompt": "Medical and Healthcare Payments",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 8 labeled 'substitute payments in lieu of dividends' on form 1099-MISC. This value is monetary figure in dollars formatted eg: $XXXX.XX format.",
                    "field_id": "439025",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Substitute Payments in Lieu of Dividends",
                    "position": 16,
                    "prompt": "Substitute Payments in Lieu of Dividends",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Locate Box 9 on the Form 1099-MISC, labeled exactly as \"Crop insurance proceeds.\" Extract only the numeric dollar amount displayed directly to the right of this label. The amount is formatted as digits with optional commas and exactly two decimal places (e.g., 1,000.00). Do NOT include symbols like \"$\", words, or extra characters. Return only the raw numeric value exactly as printed in Box 9.",
                    "field_id": "439027",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Crop Insurance Proceeds",
                    "position": 17,
                    "prompt": "Crop Insurance Proceeds",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the dollar amount from Box 10 labeled 'gross proceeds paod to an attorney' on Form 1099-MISC. Ensure the extracted value matches the correct label and is formatted as a monetary figure in dollars (e.g., $XXXX.XX).",
                    "field_id": "439028",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Gross Proceeds Paid to an Attorney",
                    "position": 18,
                    "prompt": "Gross Proceeds Paid to an Attorney",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "fish purchased for resale",
                    "field_id": "439030",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Fish Purchased for Resale",
                    "position": 19,
                    "prompt": "Fish Purchased for Resale",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "section 409A deferrals",
                    "field_id": "439031",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Section 409A Deferrals",
                    "position": 20,
                    "prompt": "Section 409A Deferrals",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Locate the box labeled exactly as \"15 Nonqualified deferred compensation\" on the Form 1099-MISC.\n\nFind the numeric dollar amount that is:\n- Located directly to the right of this label in the same horizontal row.\n- The value is formatted as digits, may include commas, and must have exactly two decimal places (e.g., 6000.00).\n- Do NOT include any symbols such as \"$\", spaces, or extra words.\n- Ignore values from any other boxes or labels, even if they are nearby.\n\nReturn only the numeric value from Box 15 as-is.",
                    "field_id": "439144",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Non Qualified Deferred Compensation",
                    "position": 21,
                    "prompt": "Non Qualified Deferred Compensation",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                }
            ]
        },
        "Nonemployee Compensation": {
            "class_id": "144677",
            "description": "",
            "fields": [
                {
                    "data_type": "TEXT",
                    "description": "Extract only the payer's full name from the first line of the top-left section on form 1099-NEC.\nThe name is fully uppercase and appears above the address.\nExclude all other details such as street address, city, state, ZIP code, and phone number.\nReturn exactly what is written, preserving spaces and capitalization.",
                    "field_id": "438843",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Name",
                    "position": 0,
                    "prompt": "Name",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract only the payer's address from the top-left section of the form 1099-NEC.  \nThe address is located directly under the payer's name and above the phone number.  \nInclude the full address in this structured format:  \n{Street Address}, {City}, {State}, {ZIP Code}.  \nExclude the payer's name and phone number.  \nEnsure the output preserves capitalization and punctuation exactly as shown on the form.",
                    "field_id": "438844",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Payer Address",
                    "position": 1,
                    "prompt": "Payer Address",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract payer telephone from top-left corner of the form 1099-NEC. Value is formatted eg: (+X) XXX-XXX-XXXX format.",
                    "field_id": "438845",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Payer Telephone",
                    "position": 2,
                    "prompt": "Payer Telephone",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "recipient name",
                    "field_id": "438846",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Recipient Name",
                    "position": 3,
                    "prompt": "Recipient Name",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the recipient's full address from the middle-left section of the document, located directly below the recipient's name. Capture the complete address exactly as written, including street, city, state, and ZIP code. Maintain the original line order and format the result as:\n{Street Address}, {City}, {State} {ZIP Code}.\nExclude the recipient's name.",
                    "field_id": "438847",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Recipient Address",
                    "position": 4,
                    "prompt": "Recipient Address",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "payer TIN",
                    "field_id": "438848",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Payer TIN",
                    "position": 5,
                    "prompt": "Payer TIN",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "recipient TIN",
                    "field_id": "438849",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Recipient TIN",
                    "position": 6,
                    "prompt": "Recipient TIN",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "account number",
                    "field_id": "438850",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Account Number",
                    "position": 7,
                    "prompt": "Account Number",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Form name located in top right side of the 1099-NEC document",
                    "field_id": "438851",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "Form Type Name",
                    "position": 8,
                    "prompt": "Form Type Name",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "for calendar year",
                    "field_id": "438852",
                    "lines": [],
                    "model_type": "DEFAULT",
                    "name": "For Calendar Year",
                    "position": 9,
                    "prompt": "For Calendar Year",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract the dollar amount from box 1 labeled 'non-employee compensation' \non from 1099-NEC. This value is monetary figure in dollars formatted in eg: $XXXX.XX format.",
                    "field_id": "438854",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Non Employee Compensation",
                    "position": 10,
                    "prompt": "Non Employee Compensation",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                },
                {
                    "data_type": "TEXT",
                    "description": "Extract dollar amount from box 4, labeled- 'federal income tax withheld'. This value is monetary in dollars formatted in $XXXX.XX format.",
                    "field_id": "438855",
                    "lines": [],
                    "model_type": "ADVANCED",
                    "name": "Federal Income Tax Withheld",
                    "position": 11,
                    "prompt": "Federal Income Tax Withheld",
                    "prompt_schema": null,
                    "prompt_type": "basic"
                }
            ]
        },
        "Other": {
            "class_id": "144674",
            "description": "",
            "fields": []
        }
    },
    "project_udfs": {
        "7092": {
            "args": [
                {
                    "data_type": "FIELD",
                    "name": "Payer_Name",
                    "value": "Payer Name"
                },
                {
                    "data_type": "FIELD",
                    "name": "Recipient_Name",
                    "value": "Recipient Name"
                }
            ],
            "code": "\n\ndef validate_names(Payer_Name, Recipient_Name, context = {}, keys = {}, **kwargs):\n    import re\n    if re.search('\\\\d', Payer_Name):\n        return 'Payer Name should not contain any numbers.'\n    if re.search('\\\\d', Recipient_Name):\n        return 'Recipient Name should not contain any numbers.'\n    return None",
            "docstring": "    Validates that 'Payer Name' and 'Recipient Name' do not contain any numbers.\n\n    Args:\n        Payer_Name (str): The name of the payer. Should not contain any numbers.\n        Recipient_Name (str): The name of the recipient. Should not contain any numbers.\n        context: Additional context (default is None).\n        **kwargs: Additional keyword arguments.\n\n    Returns:\n        str: Specific and relevant error message if validation fails, otherwise None.",
            "examples": [
                {
                    "actual": true,
                    "created_at": 1740999947000,
                    "description": "Base case with valid names containing no numbers.",
                    "expected": true,
                    "fields": {
                        "438906": "MICHAEL M JORDAN",
                        "438911": "CANNON TOOLS CO"
                    },
                    "id": 16798,
                    "updated_at": 1740999955000
                },
                {
                    "actual": true,
                    "created_at": 1740999947000,
                    "description": "Base case with valid names containing no numbers.",
                    "expected": true,
                    "fields": {
                        "438906": "Andrew Carter",
                        "438911": "Mia Mitchell"
                    },
                    "id": 16799,
                    "updated_at": 1740999955000
                },
                {
                    "actual": true,
                    "created_at": 1740999947000,
                    "description": "Base case with valid names containing no numbers.",
                    "expected": true,
                    "fields": {
                        "438906": "Ethan Perez",
                        "438911": "Abigail Campbell"
                    },
                    "id": 16800,
                    "updated_at": 1740999955000
                },
                {
                    "actual": true,
                    "created_at": 1740999947000,
                    "description": "Base case with valid names containing no numbers.",
                    "expected": true,
                    "fields": {
                        "438906": "Benjamin Adams",
                        "438911": "Isabella Baker"
                    },
                    "id": 16801,
                    "updated_at": 1740999955000
                },
                {
                    "actual": false,
                    "created_at": 1740999947000,
                    "description": "Invalid case where Payer Name contains a number.",
                    "expected": false,
                    "fields": {
                        "438906": "MICHAEL M JORDAN1",
                        "438911": "CANNON TOOLS CO"
                    },
                    "id": 16802,
                    "updated_at": 1740999955000
                },
                {
                    "actual": false,
                    "created_at": 1740999947000,
                    "description": "Invalid case where Recipient Name contains a number.",
                    "expected": false,
                    "fields": {
                        "438906": "Andrew Carter",
                        "438911": "Mia Mitchell2"
                    },
                    "id": 16803,
                    "updated_at": 1740999955000
                },
                {
                    "actual": false,
                    "created_at": 1740999947000,
                    "description": "Invalid case where Payer Name contains a number.",
                    "expected": false,
                    "fields": {
                        "438906": "Ethan Perez3",
                        "438911": "Abigail Campbell"
                    },
                    "id": 16804,
                    "updated_at": 1740999955000
                },
                {
                    "actual": false,
                    "created_at": 1740999947000,
                    "description": "Invalid case where Recipient Name contains a number.",
                    "expected": false,
                    "fields": {
                        "438906": "Benjamin Adams",
                        "438911": "Isabella Baker4"
                    },
                    "id": 16805,
                    "updated_at": 1740999955000
                }
            ],
            "function_code": "    import re\n    if re.search('\\\\d', Payer_Name):\n        return 'Payer Name should not contain any numbers.'\n    if re.search('\\\\d', Recipient_Name):\n        return 'Recipient Name should not contain any numbers.'\n    return None",
            "id": 7092,
            "lambda_udf_id": "v1:AWS_LAMBDA:3283433178:insaprd-use2-aihub-prd-docker-default-udf:9",
            "most_recent_results_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/da11cc6d-50bc-478b-9d43-db3d43d2756b_output.json",
            "name": "validate_names",
            "project_uuid": "0194cabd-5b14-7c75-8249-82f8d69013c2",
            "return_type": "string",
            "scripts_full_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/da11cc6d-50bc-478b-9d43-db3d43d2756b.json",
            "type": "VALIDATIONS"
        },
        "7093": {
            "args": [
                {
                    "data_type": "FIELD",
                    "name": "Name",
                    "value": "Name"
                },
                {
                    "data_type": "FIELD",
                    "name": "Recipient_Name",
                    "value": "Recipient Name"
                }
            ],
            "code": "\n\ndef validate_names(Name, Recipient_Name, context = {}, keys = {}, **kwargs):\n    import re\n    if re.search('[^a-zA-Z\\\\s]', Name):\n        return \"Error: 'Name' contains numbers or special characters.\"\n    if re.search('[^a-zA-Z\\\\s]', Recipient_Name):\n        return \"Error: 'Recipient Name' contains numbers or special characters.\"\n    return None",
            "docstring": "    Validates that 'Name' and 'Recipient Name' fields do not contain any numbers or special characters.\n\n    Args:\n    Name (str): The name of the person. Should not contain numbers or special characters.\n    Recipient_Name (str): The name of the recipient. Should not contain numbers or special characters.\n    context (optional): Additional context for validation. Default is None.\n    **kwargs: Additional keyword arguments.\n\n    Returns:\n    str: Specific and relevant error message if validation fails, otherwise None.",
            "examples": [
                {
                    "actual": true,
                    "created_at": 1741000014000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "438843": "MICHAEL M JORDAN",
                        "438846": "CANNON TOOLS CO"
                    },
                    "id": 16806,
                    "updated_at": 1741000023000
                },
                {
                    "actual": true,
                    "created_at": 1741000014000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "438843": "James Scott",
                        "438846": "Emma Green"
                    },
                    "id": 16807,
                    "updated_at": 1741000023000
                },
                {
                    "actual": true,
                    "created_at": 1741000014000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "438843": "David King",
                        "438846": "Sophia Wright"
                    },
                    "id": 16808,
                    "updated_at": 1741000023000
                },
                {
                    "actual": true,
                    "created_at": 1741000014000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "438843": "Matthew Hall",
                        "438846": "Olivia Young"
                    },
                    "id": 16809,
                    "updated_at": 1741000023000
                },
                {
                    "actual": false,
                    "created_at": 1741000014000,
                    "description": "Invalid case where 'Name' contains a number.",
                    "expected": false,
                    "fields": {
                        "438843": "MICHAEL M JORDAN1",
                        "438846": "CANNON TOOLS CO"
                    },
                    "id": 16810,
                    "updated_at": 1741000023000
                },
                {
                    "actual": false,
                    "created_at": 1741000014000,
                    "description": "Invalid case where 'Recipient Name' contains a special character.",
                    "expected": false,
                    "fields": {
                        "438843": "James Scott",
                        "438846": "Emma Green!"
                    },
                    "id": 16811,
                    "updated_at": 1741000023000
                },
                {
                    "actual": false,
                    "created_at": 1741000014000,
                    "description": "Invalid case where 'Name' contains a special character.",
                    "expected": false,
                    "fields": {
                        "438843": "David King@",
                        "438846": "Sophia Wright"
                    },
                    "id": 16812,
                    "updated_at": 1741000023000
                },
                {
                    "actual": false,
                    "created_at": 1741000014000,
                    "description": "Invalid case where 'Recipient Name' contains a special character.",
                    "expected": false,
                    "fields": {
                        "438843": "Matthew Hall",
                        "438846": "Olivia Young#"
                    },
                    "id": 16813,
                    "updated_at": 1741000023000
                }
            ],
            "function_code": "    import re\n    if re.search('[^a-zA-Z\\\\s]', Name):\n        return \"Error: 'Name' contains numbers or special characters.\"\n    if re.search('[^a-zA-Z\\\\s]', Recipient_Name):\n        return \"Error: 'Recipient Name' contains numbers or special characters.\"\n    return None",
            "id": 7093,
            "lambda_udf_id": "v1:AWS_LAMBDA:6129284909:insaprd-use2-aihub-prd-docker-default-udf:9",
            "most_recent_results_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/b29daca5-2062-4907-84a8-84e466453340_output.json",
            "name": "validate_names",
            "project_uuid": "0194cabd-5b14-7c75-8249-82f8d69013c2",
            "return_type": "string",
            "scripts_full_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/b29daca5-2062-4907-84a8-84e466453340.json",
            "type": "VALIDATIONS"
        },
        "7095": {
            "args": [
                {
                    "data_type": "FIELD",
                    "name": "Name",
                    "value": "Name"
                },
                {
                    "data_type": "FIELD",
                    "name": "Recipient_Name",
                    "value": "Recipient Name"
                }
            ],
            "code": "\n\ndef validate_names(Name, Recipient_Name, context = {}, keys = {}, **kwargs):\n    import re\n    if re.search('[^a-zA-Z\\\\s]', Name):\n        return \"Error: 'Name' contains numbers or special characters.\"\n    if re.search('[^a-zA-Z\\\\s]', Recipient_Name):\n        return \"Error: 'Recipient Name' contains numbers or special characters.\"\n    return None",
            "docstring": "    Validates that 'Name' and 'Recipient Name' fields do not contain any numbers or special characters.\n\n    Args:\n    Name (str): The name of the individual.\n    Recipient_Name (str): The name of the recipient.\n    context (optional): Additional context, default is None.\n    **kwargs: Additional keyword arguments.\n\n    Returns:\n    str: Specific and relevant error message if validation fails, otherwise None.",
            "examples": [
                {
                    "actual": true,
                    "created_at": 1741000137000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "432852": "MICHAEL M JORDAN",
                        "438777": "UNITED ATLANTIC SHARES"
                    },
                    "id": 16824,
                    "updated_at": 1741000145000
                },
                {
                    "actual": true,
                    "created_at": 1741000137000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "432852": "Henry Edwards",
                        "438777": "Victoria Turner"
                    },
                    "id": 16825,
                    "updated_at": 1741000145000
                },
                {
                    "actual": true,
                    "created_at": 1741000137000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "432852": "Samuel Nelson",
                        "438777": "Grace Roberts"
                    },
                    "id": 16826,
                    "updated_at": 1741000145000
                },
                {
                    "actual": true,
                    "created_at": 1741000137000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "432852": "Joshua Gonzalez",
                        "438777": "Lily Stewart"
                    },
                    "id": 16827,
                    "updated_at": 1741000145000
                },
                {
                    "actual": false,
                    "created_at": 1741000137000,
                    "description": "Invalid case where 'Name' contains a number.",
                    "expected": false,
                    "fields": {
                        "432852": "MICHAEL M JORDAN1",
                        "438777": "UNITED ATLANTIC SHARES"
                    },
                    "id": 16828,
                    "updated_at": 1741000145000
                },
                {
                    "actual": false,
                    "created_at": 1741000137000,
                    "description": "Invalid case where 'Name' contains a special character.",
                    "expected": false,
                    "fields": {
                        "432852": "Henry Edwards!",
                        "438777": "Victoria Turner"
                    },
                    "id": 16829,
                    "updated_at": 1741000145000
                },
                {
                    "actual": false,
                    "created_at": 1741000137000,
                    "description": "Invalid case where 'Recipient Name' contains a special character.",
                    "expected": false,
                    "fields": {
                        "432852": "Samuel Nelson",
                        "438777": "Grace Roberts@"
                    },
                    "id": 16830,
                    "updated_at": 1741000145000
                },
                {
                    "actual": false,
                    "created_at": 1741000137000,
                    "description": "Invalid case where 'Recipient Name' contains a special character.",
                    "expected": false,
                    "fields": {
                        "432852": "Joshua Gonzalez",
                        "438777": "Lily Stewart#"
                    },
                    "id": 16831,
                    "updated_at": 1741000145000
                }
            ],
            "function_code": "    import re\n    if re.search('[^a-zA-Z\\\\s]', Name):\n        return \"Error: 'Name' contains numbers or special characters.\"\n    if re.search('[^a-zA-Z\\\\s]', Recipient_Name):\n        return \"Error: 'Recipient Name' contains numbers or special characters.\"\n    return None",
            "id": 7095,
            "lambda_udf_id": "v1:AWS_LAMBDA:3134275275:insaprd-use2-aihub-prd-docker-default-udf:9",
            "most_recent_results_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/5176de5a-6cc1-4ac3-9579-2ffff9b238ad_output.json",
            "name": "validate_names",
            "project_uuid": "0194cabd-5b14-7c75-8249-82f8d69013c2",
            "return_type": "string",
            "scripts_full_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/5176de5a-6cc1-4ac3-9579-2ffff9b238ad.json",
            "type": "VALIDATIONS"
        },
        "7096": {
            "args": [
                {
                    "data_type": "FIELD",
                    "name": "Name",
                    "value": "Name"
                },
                {
                    "data_type": "FIELD",
                    "name": "Recipient_Name",
                    "value": "Recipient Name"
                }
            ],
            "code": "\n\ndef validate_document_fields(Name, Recipient_Name, context = {}, keys = {}, **kwargs):\n    import re\n    if re.search('[^a-zA-Z\\\\s]', Name):\n        return \"Error: 'Name' contains numbers or special characters.\"\n    if re.search('[^a-zA-Z\\\\s]', Recipient_Name):\n        return \"Error: 'Recipient Name' contains numbers or special characters.\"\n    return None",
            "docstring": "    Validates that 'Name' and 'Recipient Name' fields do not contain any numbers or special characters.\n\n    Args:\n    Name (str): The name field which should not contain any numbers or special characters.\n    Recipient_Name (str): The recipient name field which should not contain any numbers or special characters.\n    context (optional): Additional context, default is None.\n    **kwargs: Additional keyword arguments.\n\n    Returns:\n    str: Specific and relevant error message if validation fails, otherwise None.",
            "examples": [
                {
                    "actual": true,
                    "created_at": 1741000226000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "432851": "MICHAEL M JORDAN",
                        "438432": "CHEMICAL MUTUAL"
                    },
                    "id": 16832,
                    "updated_at": 1741000233000
                },
                {
                    "actual": true,
                    "created_at": 1741000226000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "432851": "John Anderson",
                        "438432": "Sarah Johnson"
                    },
                    "id": 16833,
                    "updated_at": 1741000233000
                },
                {
                    "actual": true,
                    "created_at": 1741000226000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "432851": "Robert Brown",
                        "438432": "Jennifer Wilson"
                    },
                    "id": 16834,
                    "updated_at": 1741000233000
                },
                {
                    "actual": true,
                    "created_at": 1741000226000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "432851": "MICHAEL SMITH",
                        "438432": "Emily Davis"
                    },
                    "id": 16835,
                    "updated_at": 1741000233000
                },
                {
                    "actual": false,
                    "created_at": 1741000226000,
                    "description": "Invalid case where 'Name' contains a number.",
                    "expected": false,
                    "fields": {
                        "432851": "MICHAEL M JORDAN1",
                        "438432": "CHEMICAL MUTUAL"
                    },
                    "id": 16836,
                    "updated_at": 1741000233000
                },
                {
                    "actual": false,
                    "created_at": 1741000226000,
                    "description": "Invalid case where 'Recipient Name' contains a special character.",
                    "expected": false,
                    "fields": {
                        "432851": "John Anderson",
                        "438432": "Sarah Johnson!"
                    },
                    "id": 16837,
                    "updated_at": 1741000233000
                },
                {
                    "actual": false,
                    "created_at": 1741000226000,
                    "description": "Invalid case where 'Name' contains a special character.",
                    "expected": false,
                    "fields": {
                        "432851": "Robert Brown@",
                        "438432": "Jennifer Wilson"
                    },
                    "id": 16838,
                    "updated_at": 1741000233000
                },
                {
                    "actual": false,
                    "created_at": 1741000226000,
                    "description": "Invalid case where 'Recipient Name' contains a special character.",
                    "expected": false,
                    "fields": {
                        "432851": "MICHAEL SMITH",
                        "438432": "Emily Davis#"
                    },
                    "id": 16839,
                    "updated_at": 1741000233000
                },
                {
                    "actual": false,
                    "created_at": 1741000226000,
                    "description": "Invalid case where 'Name' contains numbers.",
                    "expected": false,
                    "fields": {
                        "432851": "John123",
                        "438432": "Sarah Johnson"
                    },
                    "id": 16840,
                    "updated_at": 1741000233000
                },
                {
                    "actual": false,
                    "created_at": 1741000226000,
                    "description": "Invalid case where 'Recipient Name' contains a special character.",
                    "expected": false,
                    "fields": {
                        "432851": "Robert Brown",
                        "438432": "Jennifer Wilson$"
                    },
                    "id": 16841,
                    "updated_at": 1741000233000
                }
            ],
            "function_code": "    import re\n    if re.search('[^a-zA-Z\\\\s]', Name):\n        return \"Error: 'Name' contains numbers or special characters.\"\n    if re.search('[^a-zA-Z\\\\s]', Recipient_Name):\n        return \"Error: 'Recipient Name' contains numbers or special characters.\"\n    return None",
            "id": 7096,
            "lambda_udf_id": "v1:AWS_LAMBDA:3299528517:insaprd-use2-aihub-prd-docker-default-udf:9",
            "most_recent_results_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/b2df2a56-465e-488e-9185-8af2dbf185bc_output.json",
            "name": "validate_document_fields",
            "project_uuid": "0194cabd-5b14-7c75-8249-82f8d69013c2",
            "return_type": "string",
            "scripts_full_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/b2df2a56-465e-488e-9185-8af2dbf185bc.json",
            "type": "VALIDATIONS"
        },
        "7097": {
            "args": [
                {
                    "data_type": "FIELD",
                    "name": "Recipient_Name",
                    "value": "Recipient Name"
                },
                {
                    "data_type": "FIELD",
                    "name": "Payer_Name",
                    "value": "Payer Name"
                }
            ],
            "code": "\n\ndef validate_names(Recipient_Name, Payer_Name, context = {}, keys = {}, **kwargs):\n    import re\n    if re.search('[^a-zA-Z\\\\s]', Recipient_Name):\n        return 'Recipient Name contains invalid characters.'\n    if re.search('[^a-zA-Z\\\\s]', Payer_Name):\n        return 'Payer Name contains invalid characters.'\n    return None",
            "docstring": "    Validates that 'Payer Name' and 'Recipient Name' shouldn't contain any number or special character.\n\n    Args:\n    Recipient_Name (str): The name of the recipient. Should not contain numbers or special characters.\n    Payer_Name (str): The name of the payer. Should not contain numbers or special characters.\n    context (optional): Additional context for validation. Default is None.\n    **kwargs: Additional keyword arguments.\n\n    Returns:\n    str: Specific and relevant error message if validation fails, otherwise None.",
            "examples": [
                {
                    "actual": true,
                    "created_at": 1741000277000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "438310": "WEST LIFE INSURANCE",
                        "438416": "MICHAEL M JORDAN"
                    },
                    "id": 16842,
                    "updated_at": 1741000286000
                },
                {
                    "actual": true,
                    "created_at": 1741000277000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "438310": "Jessica Thomas",
                        "438416": "William Martinez"
                    },
                    "id": 16843,
                    "updated_at": 1741000286000
                },
                {
                    "actual": true,
                    "created_at": 1741000277000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "438310": "Ashley Harris",
                        "438416": "Daniel Taylor"
                    },
                    "id": 16844,
                    "updated_at": 1741000286000
                },
                {
                    "actual": true,
                    "created_at": 1741000277000,
                    "description": "Base case with valid names containing no numbers or special characters.",
                    "expected": true,
                    "fields": {
                        "438310": "Amanda Lewis",
                        "438416": "Christopher Clark"
                    },
                    "id": 16845,
                    "updated_at": 1741000286000
                },
                {
                    "actual": false,
                    "created_at": 1741000277000,
                    "description": "Invalid case where 'Recipient Name' contains numbers.",
                    "expected": false,
                    "fields": {
                        "438310": "WEST LIFE INSURANCE 123",
                        "438416": "MICHAEL M JORDAN"
                    },
                    "id": 16846,
                    "updated_at": 1741000286000
                },
                {
                    "actual": false,
                    "created_at": 1741000277000,
                    "description": "Invalid case where 'Payer Name' contains a special character.",
                    "expected": false,
                    "fields": {
                        "438310": "Jessica Thomas",
                        "438416": "William Martinez!"
                    },
                    "id": 16847,
                    "updated_at": 1741000286000
                },
                {
                    "actual": false,
                    "created_at": 1741000277000,
                    "description": "Invalid case where 'Recipient Name' contains a special character.",
                    "expected": false,
                    "fields": {
                        "438310": "Ashley Harris@",
                        "438416": "Daniel Taylor"
                    },
                    "id": 16848,
                    "updated_at": 1741000286000
                },
                {
                    "actual": false,
                    "created_at": 1741000277000,
                    "description": "Invalid case where 'Payer Name' contains a special character.",
                    "expected": false,
                    "fields": {
                        "438310": "Amanda Lewis",
                        "438416": "Christopher Clark#"
                    },
                    "id": 16849,
                    "updated_at": 1741000286000
                }
            ],
            "function_code": "    import re\n    if re.search('[^a-zA-Z\\\\s]', Recipient_Name):\n        return 'Recipient Name contains invalid characters.'\n    if re.search('[^a-zA-Z\\\\s]', Payer_Name):\n        return 'Payer Name contains invalid characters.'\n    return None",
            "id": 7097,
            "lambda_udf_id": "v1:AWS_LAMBDA:2829633124:insaprd-use2-aihub-prd-docker-default-udf:9",
            "most_recent_results_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/0a2444e9-5a1e-4f91-9fea-c3f4c8fdfa8f_output.json",
            "name": "validate_names",
            "project_uuid": "0194cabd-5b14-7c75-8249-82f8d69013c2",
            "return_type": "string",
            "scripts_full_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/0a2444e9-5a1e-4f91-9fea-c3f4c8fdfa8f.json",
            "type": "VALIDATIONS"
        },
        "7098": {
            "args": [
                {
                    "data_type": "FIELD",
                    "name": "Payer_TIN",
                    "value": "Payer TIN"
                },
                {
                    "data_type": "FIELD",
                    "name": "Recipient_TIN",
                    "value": "Recipient TIN"
                },
                {
                    "data_type": "FIELD",
                    "name": "Account_Number",
                    "value": "Account Number"
                }
            ],
            "code": "\n\ndef validate_document_fields(Payer_TIN, Recipient_TIN, Account_Number, context = {}, keys = {}, **kwargs):\n    import re\n    if re.search('[A-Za-z]', Payer_TIN):\n        return 'Payer TIN must not contain alphabets.'\n    if re.search('[A-Za-z]', Recipient_TIN):\n        return 'Recipient TIN must not contain alphabets.'\n    if re.search('[A-Za-z]', Account_Number):\n        return 'Account Number must not contain alphabets.'\n    return None",
            "docstring": "    Validates that 'Payer TIN', 'Recipient TIN', 'Account Number' must not contain alphabets.\n\n    Args:\n        Payer_TIN (str): The Payer's Tax Identification Number.\n        Recipient_TIN (str): The Recipient's Tax Identification Number.\n        Account_Number (str): The Account Number.\n        context: Additional context (default is None).\n        **kwargs: Additional keyword arguments.\n\n    Returns:\n        str: Specific and relevant error message if validation fails, otherwise None.",
            "examples": [
                {
                    "actual": true,
                    "created_at": 1741000362000,
                    "description": "Base case with valid numeric values in all fields.",
                    "expected": true,
                    "fields": {
                        "438308": "10-9920202",
                        "438309": "101-42-0204",
                        "438312": "00202072"
                    },
                    "id": 16850,
                    "updated_at": 1741000371000
                },
                {
                    "actual": true,
                    "created_at": 1741000362000,
                    "description": "Base case with valid numeric values in all fields.",
                    "expected": true,
                    "fields": {
                        "438308": "45-6789012",
                        "438309": "65-4321098",
                        "438312": "400500600704"
                    },
                    "id": 16851,
                    "updated_at": 1741000371000
                },
                {
                    "actual": true,
                    "created_at": 1741000362000,
                    "description": "Base case with valid numeric values in all fields.",
                    "expected": true,
                    "fields": {
                        "438308": "56-7890123",
                        "438309": "54-3210987",
                        "438312": "500600700805"
                    },
                    "id": 16852,
                    "updated_at": 1741000371000
                },
                {
                    "actual": true,
                    "created_at": 1741000362000,
                    "description": "Base case with valid numeric values in all fields.",
                    "expected": true,
                    "fields": {
                        "438308": "67-8901234",
                        "438309": "43-2109876",
                        "438312": "600700800906"
                    },
                    "id": 16853,
                    "updated_at": 1741000371000
                },
                {
                    "actual": false,
                    "created_at": 1741000362000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438308": "10-99A202",
                        "438309": "101-42-020B",
                        "438312": "0020207C"
                    },
                    "id": 16854,
                    "updated_at": 1741000371000
                },
                {
                    "actual": false,
                    "created_at": 1741000362000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438308": "45-6789D12",
                        "438309": "65-4321E98",
                        "438312": "4005006007F4"
                    },
                    "id": 16855,
                    "updated_at": 1741000371000
                },
                {
                    "actual": false,
                    "created_at": 1741000362000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438308": "56-7890G23",
                        "438309": "54-3210H87",
                        "438312": "5006007008I5"
                    },
                    "id": 16856,
                    "updated_at": 1741000371000
                },
                {
                    "actual": false,
                    "created_at": 1741000362000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438308": "67-8901J34",
                        "438309": "43-2109K76",
                        "438312": "6007008009L6"
                    },
                    "id": 16857,
                    "updated_at": 1741000371000
                }
            ],
            "function_code": "    import re\n    if re.search('[A-Za-z]', Payer_TIN):\n        return 'Payer TIN must not contain alphabets.'\n    if re.search('[A-Za-z]', Recipient_TIN):\n        return 'Recipient TIN must not contain alphabets.'\n    if re.search('[A-Za-z]', Account_Number):\n        return 'Account Number must not contain alphabets.'\n    return None",
            "id": 7098,
            "lambda_udf_id": "v1:AWS_LAMBDA:1694054961:insaprd-use2-aihub-prd-docker-default-udf:9",
            "most_recent_results_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/06433931-c4b1-4d30-a896-790dbdc52fe3_output.json",
            "name": "validate_document_fields",
            "project_uuid": "0194cabd-5b14-7c75-8249-82f8d69013c2",
            "return_type": "string",
            "scripts_full_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/06433931-c4b1-4d30-a896-790dbdc52fe3.json",
            "type": "VALIDATIONS"
        },
        "7099": {
            "args": [
                {
                    "data_type": "FIELD",
                    "name": "Payer_TIN",
                    "value": "Payer TIN"
                },
                {
                    "data_type": "FIELD",
                    "name": "Recipient_TIN",
                    "value": "Recipient TIN"
                },
                {
                    "data_type": "FIELD",
                    "name": "Account_Number",
                    "value": "Account Number"
                }
            ],
            "code": "\n\ndef validate_document_fields(Payer_TIN, Recipient_TIN, Account_Number, context = {}, keys = {}, **kwargs):\n    import re\n    fields = {'Payer TIN': Payer_TIN, 'Recipient TIN': Recipient_TIN, 'Account Number': Account_Number}\n    for (field_name, value) in fields.items():\n        if re.search('[A-Za-z]', value):\n            return f'Error: {field_name} contains alphabets.'\n    return None",
            "docstring": "    Validates that 'Payer TIN', 'Recipient TIN', and 'Account Number' must not contain alphabets.\n\n    Args:\n        Payer_TIN (str): The Payer's Tax Identification Number.\n        Recipient_TIN (str): The Recipient's Tax Identification Number.\n        Account_Number (str): The Account Number.\n        context: Additional context (default is None).\n        **kwargs: Additional keyword arguments.\n\n    Returns:\n        str: Specific and relevant error message if validation fails, otherwise None.",
            "examples": [
                {
                    "actual": true,
                    "created_at": 1741000417000,
                    "description": "Base case with valid numeric values and correct format.",
                    "expected": true,
                    "fields": {
                        "438430": "10-9920202",
                        "438431": "101-42-0205",
                        "438434": "00202073"
                    },
                    "id": 16858,
                    "updated_at": 1741000424000
                },
                {
                    "actual": true,
                    "created_at": 1741000417000,
                    "description": "Base case with valid numeric values and correct format.",
                    "expected": true,
                    "fields": {
                        "438430": "12-3456789",
                        "438431": "98-7654321",
                        "438434": "100200300401"
                    },
                    "id": 16859,
                    "updated_at": 1741000424000
                },
                {
                    "actual": true,
                    "created_at": 1741000417000,
                    "description": "Base case with valid numeric values and correct format.",
                    "expected": true,
                    "fields": {
                        "438430": "34-5678901",
                        "438431": "76-5432109",
                        "438434": "300400500603"
                    },
                    "id": 16860,
                    "updated_at": 1741000424000
                },
                {
                    "actual": true,
                    "created_at": 1741000417000,
                    "description": "Base case with valid numeric values and correct format.",
                    "expected": true,
                    "fields": {
                        "438430": "23-4567890",
                        "438431": "87-6543210",
                        "438434": "200300400502"
                    },
                    "id": 16861,
                    "updated_at": 1741000424000
                },
                {
                    "actual": false,
                    "created_at": 1741000417000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438430": "10-99A2020",
                        "438431": "101-42-020B",
                        "438434": "0020207C"
                    },
                    "id": 16862,
                    "updated_at": 1741000424000
                },
                {
                    "actual": false,
                    "created_at": 1741000417000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438430": "12-3456D89",
                        "438431": "98-7654E21",
                        "438434": "1002003F0401"
                    },
                    "id": 16863,
                    "updated_at": 1741000424000
                },
                {
                    "actual": false,
                    "created_at": 1741000417000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438430": "34-5678G01",
                        "438431": "76-5432H09",
                        "438434": "3004005I0603"
                    },
                    "id": 16864,
                    "updated_at": 1741000424000
                },
                {
                    "actual": false,
                    "created_at": 1741000417000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438430": "23-4567J90",
                        "438431": "87-6543K10",
                        "438434": "2003004L0502"
                    },
                    "id": 16865,
                    "updated_at": 1741000424000
                }
            ],
            "function_code": "    import re\n    fields = {'Payer TIN': Payer_TIN, 'Recipient TIN': Recipient_TIN, 'Account Number': Account_Number}\n    for (field_name, value) in fields.items():\n        if re.search('[A-Za-z]', value):\n            return f'Error: {field_name} contains alphabets.'\n    return None",
            "id": 7099,
            "lambda_udf_id": "v1:AWS_LAMBDA:1792604954:insaprd-use2-aihub-prd-docker-default-udf:9",
            "most_recent_results_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/5694b151-87bd-4a8e-9476-e2184c13f2ed_output.json",
            "name": "validate_document_fields",
            "project_uuid": "0194cabd-5b14-7c75-8249-82f8d69013c2",
            "return_type": "string",
            "scripts_full_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/5694b151-87bd-4a8e-9476-e2184c13f2ed.json",
            "type": "VALIDATIONS"
        },
        "7100": {
            "args": [
                {
                    "data_type": "FIELD",
                    "name": "Payer_TIN",
                    "value": "Payer TIN"
                },
                {
                    "data_type": "FIELD",
                    "name": "Recipient_TIN",
                    "value": "Recipient TIN"
                },
                {
                    "data_type": "FIELD",
                    "name": "Account_Number",
                    "value": "Account Number"
                }
            ],
            "code": "\n\ndef validate_document_fields(Payer_TIN, Recipient_TIN, Account_Number, context = {}, keys = {}, **kwargs):\n    import re\n    fields = {'Payer TIN': Payer_TIN, 'Recipient TIN': Recipient_TIN, 'Account Number': Account_Number}\n    for (field_name, value) in fields.items():\n        if re.search('[A-Za-z]', value):\n            return f'Error: {field_name} must not contain alphabets.'\n    return None",
            "docstring": "    Validates that 'Payer TIN', 'Recipient TIN', and 'Account Number' must not contain alphabets.\n\n    Args:\n        Payer_TIN (str): The Payer's Tax Identification Number.\n        Recipient_TIN (str): The Recipient's Tax Identification Number.\n        Account_Number (str): The Account Number.\n        context: Additional context (default is None).\n        **kwargs: Additional keyword arguments.\n\n    Returns:\n        str: Specific and relevant error message if validation fails, otherwise None.",
            "examples": [
                {
                    "actual": true,
                    "created_at": 1741000643000,
                    "description": "Base case with valid numeric values in the correct format.",
                    "expected": true,
                    "fields": {
                        "438780": "10-9920202",
                        "438782": "101-42-0203",
                        "438783": "00202071"
                    },
                    "id": 16866,
                    "updated_at": 1741000651000
                },
                {
                    "actual": true,
                    "created_at": 1741000643000,
                    "description": "Base case with valid numeric values in the correct format.",
                    "expected": true,
                    "fields": {
                        "438780": "56-7890123",
                        "438782": "44-3210987",
                        "438783": "600700809015"
                    },
                    "id": 16867,
                    "updated_at": 1741000651000
                },
                {
                    "actual": true,
                    "created_at": 1741000643000,
                    "description": "Base case with valid numeric values in the correct format.",
                    "expected": true,
                    "fields": {
                        "438780": "45-6789012",
                        "438782": "55-4321098",
                        "438783": "500600708014"
                    },
                    "id": 16868,
                    "updated_at": 1741000651000
                },
                {
                    "actual": true,
                    "created_at": 1741000643000,
                    "description": "Base case with valid numeric values in the correct format.",
                    "expected": true,
                    "fields": {
                        "438780": "34-5678901",
                        "438782": "66-5432109",
                        "438783": "400500607013"
                    },
                    "id": 16869,
                    "updated_at": 1741000651000
                },
                {
                    "actual": false,
                    "created_at": 1741000643000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438780": "10-99A0202",
                        "438782": "101-42-020B",
                        "438783": "0020207C"
                    },
                    "id": 16870,
                    "updated_at": 1741000651000
                },
                {
                    "actual": false,
                    "created_at": 1741000643000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438780": "56-7890D23",
                        "438782": "44-3210E87",
                        "438783": "60070080F015"
                    },
                    "id": 16871,
                    "updated_at": 1741000651000
                },
                {
                    "actual": false,
                    "created_at": 1741000643000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438780": "45-678G012",
                        "438782": "55-4321H98",
                        "438783": "5006007I8014"
                    },
                    "id": 16872,
                    "updated_at": 1741000651000
                },
                {
                    "actual": false,
                    "created_at": 1741000643000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438780": "34-567J901",
                        "438782": "66-5432K109",
                        "438783": "4005006L7013"
                    },
                    "id": 16873,
                    "updated_at": 1741000651000
                }
            ],
            "function_code": "    import re\n    fields = {'Payer TIN': Payer_TIN, 'Recipient TIN': Recipient_TIN, 'Account Number': Account_Number}\n    for (field_name, value) in fields.items():\n        if re.search('[A-Za-z]', value):\n            return f'Error: {field_name} must not contain alphabets.'\n    return None",
            "id": 7100,
            "lambda_udf_id": "v1:AWS_LAMBDA:2385413652:insaprd-use2-aihub-prd-docker-default-udf:9",
            "most_recent_results_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/4244fefe-7836-4b55-a8ab-0466ff6697bd_output.json",
            "name": "validate_document_fields",
            "project_uuid": "0194cabd-5b14-7c75-8249-82f8d69013c2",
            "return_type": "string",
            "scripts_full_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/4244fefe-7836-4b55-a8ab-0466ff6697bd.json",
            "type": "VALIDATIONS"
        },
        "7101": {
            "args": [
                {
                    "data_type": "FIELD",
                    "name": "Payer_TIN",
                    "value": "Payer TIN"
                },
                {
                    "data_type": "FIELD",
                    "name": "Recipient_TIN",
                    "value": "Recipient TIN"
                },
                {
                    "data_type": "FIELD",
                    "name": "Account_Number",
                    "value": "Account Number"
                }
            ],
            "code": "\n\ndef validate_document_fields(Payer_TIN, Recipient_TIN, Account_Number, context = {}, keys = {}, **kwargs):\n    import re\n    if re.search('[A-Za-z]', Payer_TIN):\n        return 'Payer TIN must not contain alphabets.'\n    if re.search('[A-Za-z]', Recipient_TIN):\n        return 'Recipient TIN must not contain alphabets.'\n    if re.search('[A-Za-z]', Account_Number):\n        return 'Account Number must not contain alphabets.'\n    return None",
            "docstring": "    Validates that 'Payer TIN', 'Recipient TIN', 'Account Number' must not contain alphabets.\n\n    Args:\n        Payer_TIN (str): The Payer's Tax Identification Number.\n        Recipient_TIN (str): The Recipient's Tax Identification Number.\n        Account_Number (str): The Account Number.\n        context (optional): Additional context, default is None.\n        **kwargs: Additional keyword arguments.\n\n    Returns:\n        str: Specific and relevant error message if validation fails, otherwise None.",
            "examples": [
                {
                    "actual": true,
                    "created_at": 1741000696000,
                    "description": "Base case with valid numeric values in all fields.",
                    "expected": true,
                    "fields": {
                        "438848": "12-3456789",
                        "438849": "23-4567890",
                        "438850": "123456789012"
                    },
                    "id": 16874,
                    "updated_at": 1741000705000
                },
                {
                    "actual": true,
                    "created_at": 1741000696000,
                    "description": "Base case with valid numeric values in all fields.",
                    "expected": true,
                    "fields": {
                        "438848": "34-5678901",
                        "438849": "45-6789012",
                        "438850": "234567890123"
                    },
                    "id": 16875,
                    "updated_at": 1741000705000
                },
                {
                    "actual": false,
                    "created_at": 1741000696000,
                    "description": "Invalid case with alphabet 'A' in Payer TIN.",
                    "expected": false,
                    "fields": {
                        "438848": "12-34A6789",
                        "438849": "23-4567890",
                        "438850": "123456789012"
                    },
                    "id": 16876,
                    "updated_at": 1741000705000
                },
                {
                    "actual": false,
                    "created_at": 1741000696000,
                    "description": "Invalid case with alphabet 'B' in Recipient TIN.",
                    "expected": false,
                    "fields": {
                        "438848": "34-5678901",
                        "438849": "45-678B012",
                        "438850": "234567890123"
                    },
                    "id": 16877,
                    "updated_at": 1741000705000
                },
                {
                    "actual": false,
                    "created_at": 1741000696000,
                    "description": "Invalid case with alphabet 'C' in Account Number.",
                    "expected": false,
                    "fields": {
                        "438848": "34-5678901",
                        "438849": "45-6789012",
                        "438850": "2345678C0123"
                    },
                    "id": 16878,
                    "updated_at": 1741000705000
                },
                {
                    "actual": false,
                    "created_at": 1741000696000,
                    "description": "Invalid case with alphabet 'D' in Account Number.",
                    "expected": false,
                    "fields": {
                        "438848": "12-3456789",
                        "438849": "23-4567890",
                        "438850": "12345678D012"
                    },
                    "id": 16879,
                    "updated_at": 1741000705000
                }
            ],
            "function_code": "    import re\n    if re.search('[A-Za-z]', Payer_TIN):\n        return 'Payer TIN must not contain alphabets.'\n    if re.search('[A-Za-z]', Recipient_TIN):\n        return 'Recipient TIN must not contain alphabets.'\n    if re.search('[A-Za-z]', Account_Number):\n        return 'Account Number must not contain alphabets.'\n    return None",
            "id": 7101,
            "lambda_udf_id": "v1:AWS_LAMBDA:4748066392:insaprd-use2-aihub-prd-docker-default-udf:9",
            "most_recent_results_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/f653e3df-5e91-4311-81e0-6c433124be01_output.json",
            "name": "validate_document_fields",
            "project_uuid": "0194cabd-5b14-7c75-8249-82f8d69013c2",
            "return_type": "string",
            "scripts_full_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/f653e3df-5e91-4311-81e0-6c433124be01.json",
            "type": "VALIDATIONS"
        },
        "7102": {
            "args": [
                {
                    "data_type": "FIELD",
                    "name": "Payer_TIN",
                    "value": "Payer TIN"
                },
                {
                    "data_type": "FIELD",
                    "name": "Recipient_TIN",
                    "value": "Recipient TIN"
                },
                {
                    "data_type": "FIELD",
                    "name": "Account_Number",
                    "value": "Account Number"
                }
            ],
            "code": "\n\ndef validate_document_fields(Payer_TIN, Recipient_TIN, Account_Number, context = {}, keys = {}, **kwargs):\n    import re\n    fields = {'Payer TIN': Payer_TIN, 'Recipient TIN': Recipient_TIN, 'Account Number': Account_Number}\n    for (field_name, value) in fields.items():\n        if re.search('[A-Za-z]', value):\n            return f'Error: {field_name} contains alphabets.'\n    return None",
            "docstring": "    Validates that 'Payer TIN', 'Recipient TIN', and 'Account Number' must not contain alphabets.\n\n    Args:\n        Payer_TIN (str): The Payer's Tax Identification Number.\n        Recipient_TIN (str): The Recipient's Tax Identification Number.\n        Account_Number (str): The Account Number.\n        context: Additional context (default is None).\n        **kwargs: Additional keyword arguments.\n\n    Returns:\n        str: Specific and relevant error message if validation fails, otherwise None.",
            "examples": [
                {
                    "actual": true,
                    "created_at": 1741000785000,
                    "description": "Base case with valid numeric values in the correct format.",
                    "expected": true,
                    "fields": {
                        "438909": "10-9920202",
                        "438910": "101-42-0202",
                        "438913": "00202070"
                    },
                    "id": 16880,
                    "updated_at": 1741000793000
                },
                {
                    "actual": true,
                    "created_at": 1741000785000,
                    "description": "Base case with valid numeric values in the correct format.",
                    "expected": true,
                    "fields": {
                        "438909": "12-3456789",
                        "438910": "88-7654321",
                        "438913": "100200304010"
                    },
                    "id": 16881,
                    "updated_at": 1741000793000
                },
                {
                    "actual": true,
                    "created_at": 1741000785000,
                    "description": "Base case with valid numeric values in the correct format.",
                    "expected": true,
                    "fields": {
                        "438909": "23-4567890",
                        "438910": "77-6543210",
                        "438913": "300400506012"
                    },
                    "id": 16882,
                    "updated_at": 1741000793000
                },
                {
                    "actual": true,
                    "created_at": 1741000785000,
                    "description": "Base case with valid numeric values in the correct format.",
                    "expected": true,
                    "fields": {
                        "438909": "01-2345678",
                        "438910": "99-8765432",
                        "438913": "00202070"
                    },
                    "id": 16883,
                    "updated_at": 1741000793000
                },
                {
                    "actual": false,
                    "created_at": 1741000785000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438909": "10-99A0202",
                        "438910": "101-42-0B02",
                        "438913": "0020207C"
                    },
                    "id": 16884,
                    "updated_at": 1741000793000
                },
                {
                    "actual": false,
                    "created_at": 1741000785000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438909": "12-3456D89",
                        "438910": "88-7654E21",
                        "438913": "1002003F4010"
                    },
                    "id": 16885,
                    "updated_at": 1741000793000
                },
                {
                    "actual": false,
                    "created_at": 1741000785000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438909": "23-4567G90",
                        "438910": "77-6543H10",
                        "438913": "3004005I6012"
                    },
                    "id": 16886,
                    "updated_at": 1741000793000
                },
                {
                    "actual": false,
                    "created_at": 1741000785000,
                    "description": "Invalid case with alphabets in all fields.",
                    "expected": false,
                    "fields": {
                        "438909": "01-2345J78",
                        "438910": "99-8765K32",
                        "438913": "0020207L"
                    },
                    "id": 16887,
                    "updated_at": 1741000793000
                }
            ],
            "function_code": "    import re\n    fields = {'Payer TIN': Payer_TIN, 'Recipient TIN': Recipient_TIN, 'Account Number': Account_Number}\n    for (field_name, value) in fields.items():\n        if re.search('[A-Za-z]', value):\n            return f'Error: {field_name} contains alphabets.'\n    return None",
            "id": 7102,
            "lambda_udf_id": "v1:AWS_LAMBDA:1229312770:insaprd-use2-aihub-prd-docker-default-udf:9",
            "most_recent_results_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/f1fc17e2-3da7-486f-8c5c-ad11a4bb565f_output.json",
            "name": "validate_document_fields",
            "project_uuid": "0194cabd-5b14-7c75-8249-82f8d69013c2",
            "return_type": "string",
            "scripts_full_path": "ib-internal/SolEng_workspace/fs/Instabase Drive/aihub/0194cabd-5b14-7c75-8249-82f8d69013c2/project/modules/scripts/VALIDATIONS/f1fc17e2-3da7-486f-8c5c-ad11a4bb565f.json",
            "type": "VALIDATIONS"
        }
    },
    "project_validations": [
        {
            "affected_fields": [
                438306
            ],
            "alert_level": "FAILURE",
            "created_at": 1740026922000,
            "description": "",
            "id": 6309,
            "input_fields": [
                438306
            ],
            "name": "Rule 1",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438316
            ],
            "alert_level": "FAILURE",
            "created_at": 1740027038000,
            "description": "",
            "id": 6319,
            "input_fields": [
                438316
            ],
            "name": "Rule 10",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438843,
                438846
            ],
            "alert_level": "FAILURE",
            "created_at": 1740380294000,
            "description": "Validation prompt",
            "id": 6650,
            "input_fields": [
                438843,
                438846
            ],
            "name": "Rule 100",
            "params": {
                "prompt": "\\Name\\ and \\Recipient Name\\ shouldn't contain any number or special character.",
                "udf_id": 7093
            },
            "scope": "FIELD",
            "type": "PROMPT_UDF",
            "updated_at": 1741257628000
        },
        {
            "affected_fields": [
                438906,
                438911
            ],
            "alert_level": "FAILURE",
            "created_at": 1740999874000,
            "description": "Validation prompt",
            "id": 7013,
            "input_fields": [
                438906,
                438911
            ],
            "name": "Rule 101",
            "params": {
                "prompt": "\\Payer Name\\ and \\Recipient Name\\ shouldn't contain any number.",
                "udf_id": 7092
            },
            "scope": "FIELD",
            "type": "PROMPT_UDF",
            "updated_at": 1741257628000
        },
        {
            "affected_fields": [
                438777,
                432852
            ],
            "alert_level": "FAILURE",
            "created_at": 1741000075000,
            "description": "Validation prompt",
            "id": 7014,
            "input_fields": [
                438777,
                432852
            ],
            "name": "Rule 102",
            "params": {
                "prompt": "\\Name\\ and \\Recipient Name\\ shouldn't contain any number or special character.",
                "udf_id": 7095
            },
            "scope": "FIELD",
            "type": "PROMPT_UDF",
            "updated_at": 1741257628000
        },
        {
            "affected_fields": [
                438432,
                432851
            ],
            "alert_level": "FAILURE",
            "created_at": 1741000204000,
            "description": "Validation prompt",
            "id": 7015,
            "input_fields": [
                438432,
                432851
            ],
            "name": "Rule 103",
            "params": {
                "prompt": "\\Name\\ and \\Recipient Name\\ shouldn't contain any number or special character.",
                "udf_id": 7096
            },
            "scope": "FIELD",
            "type": "PROMPT_UDF",
            "updated_at": 1741257628000
        },
        {
            "affected_fields": [
                438416,
                438310
            ],
            "alert_level": "FAILURE",
            "created_at": 1741000262000,
            "description": "Validation prompt",
            "id": 7016,
            "input_fields": [
                438416,
                438310
            ],
            "name": "Rule 104",
            "params": {
                "prompt": "\\Payer Name\\ and \\Recipient Name\\ shouldn't contain any number or special character.",
                "udf_id": 7097
            },
            "scope": "FIELD",
            "type": "PROMPT_UDF",
            "updated_at": 1741257628000
        },
        {
            "affected_fields": [
                438309,
                438312,
                438308
            ],
            "alert_level": "FAILURE",
            "created_at": 1741000345000,
            "description": "Validation prompt",
            "id": 7017,
            "input_fields": [
                438309,
                438312,
                438308
            ],
            "name": "Rule 105",
            "params": {
                "prompt": "\\Payer TIN\\, \\Recipient TIN\\, \\Account Number\\ must not contain alphabets.",
                "udf_id": 7098
            },
            "scope": "FIELD",
            "type": "PROMPT_UDF",
            "updated_at": 1741257629000
        },
        {
            "affected_fields": [
                438434
            ],
            "alert_level": "FAILURE",
            "created_at": 1741000399000,
            "description": "Validation prompt",
            "id": 7018,
            "input_fields": [
                438434
            ],
            "name": "Rule 106",
            "params": {
                "prompt": "Payer TIN, Recipient TIN, \\Account Number\\ must not contain alphabets.",
                "udf_id": 7099
            },
            "scope": "FIELD",
            "type": "PROMPT_UDF",
            "updated_at": 1741257629000
        },
        {
            "affected_fields": [
                438780,
                438783,
                438782
            ],
            "alert_level": "FAILURE",
            "created_at": 1741000619000,
            "description": "Validation prompt",
            "id": 7019,
            "input_fields": [
                438780,
                438783,
                438782
            ],
            "name": "Rule 107",
            "params": {
                "prompt": "\\Payer TIN\\, \\Recipient TIN\\, \\Account Number\\ must not contain alphabets.",
                "udf_id": 7100
            },
            "scope": "FIELD",
            "type": "PROMPT_UDF",
            "updated_at": 1741257629000
        },
        {
            "affected_fields": [
                438848,
                438850,
                438849
            ],
            "alert_level": "FAILURE",
            "created_at": 1741000677000,
            "description": "Validation prompt",
            "id": 7020,
            "input_fields": [
                438848,
                438850,
                438849
            ],
            "name": "Rule 108",
            "params": {
                "prompt": "\\Payer TIN\\, \\Recipient TIN\\, \\Account Number\\ must not contain alphabets.<br>",
                "udf_id": 7101
            },
            "scope": "FIELD",
            "type": "PROMPT_UDF",
            "updated_at": 1741257629000
        },
        {
            "affected_fields": [
                438910,
                438913,
                438909
            ],
            "alert_level": "FAILURE",
            "created_at": 1741000766000,
            "description": "Validation prompt",
            "id": 7021,
            "input_fields": [
                438910,
                438913,
                438909
            ],
            "name": "Rule 109",
            "params": {
                "prompt": "\\Payer TIN\\, \\Recipient TIN\\, \\Account Number\\ must not contain alphabets.",
                "udf_id": 7102
            },
            "scope": "FIELD",
            "type": "PROMPT_UDF",
            "updated_at": 1741257629000
        },
        {
            "affected_fields": [
                438317
            ],
            "alert_level": "FAILURE",
            "created_at": 1740027055000,
            "description": "",
            "id": 6320,
            "input_fields": [
                438317
            ],
            "name": "Rule 11",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438318
            ],
            "alert_level": "FAILURE",
            "created_at": 1740027065000,
            "description": "",
            "id": 6321,
            "input_fields": [
                438318
            ],
            "name": "Rule 12",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438319
            ],
            "alert_level": "FAILURE",
            "created_at": 1740027074000,
            "description": "",
            "id": 6322,
            "input_fields": [
                438319
            ],
            "name": "Rule 13",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438320
            ],
            "alert_level": "FAILURE",
            "created_at": 1740027536000,
            "description": "",
            "id": 6323,
            "input_fields": [
                438320
            ],
            "name": "Rule 14",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438321
            ],
            "alert_level": "FAILURE",
            "created_at": 1740027546000,
            "description": "",
            "id": 6324,
            "input_fields": [
                438321
            ],
            "name": "Rule 15",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438322
            ],
            "alert_level": "FAILURE",
            "created_at": 1740027555000,
            "description": "",
            "id": 6325,
            "input_fields": [
                438322
            ],
            "name": "Rule 16",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438323
            ],
            "alert_level": "FAILURE",
            "created_at": 1740027563000,
            "description": "",
            "id": 6326,
            "input_fields": [
                438323
            ],
            "name": "Rule 17",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438324
            ],
            "alert_level": "FAILURE",
            "created_at": 1740027575000,
            "description": "",
            "id": 6327,
            "input_fields": [
                438324
            ],
            "name": "Rule 18",
            "params": {
                "confidence_threshold": 0.95
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438325
            ],
            "alert_level": "FAILURE",
            "created_at": 1740027583000,
            "description": "",
            "id": 6328,
            "input_fields": [
                438325
            ],
            "name": "Rule 19",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438308
            ],
            "alert_level": "FAILURE",
            "created_at": 1740026947000,
            "description": "",
            "id": 6311,
            "input_fields": [
                438308
            ],
            "name": "Rule 2",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438416
            ],
            "alert_level": "FAILURE",
            "created_at": 1740028136000,
            "description": "",
            "id": 6329,
            "input_fields": [
                438416
            ],
            "name": "Rule 20",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                432851
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033004000,
            "description": "",
            "id": 6331,
            "input_fields": [
                432851
            ],
            "name": "Rule 21",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                432853
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033013000,
            "description": "",
            "id": 6332,
            "input_fields": [
                432853
            ],
            "name": "Rule 22",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438429
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033022000,
            "description": "",
            "id": 6333,
            "input_fields": [
                438429
            ],
            "name": "Rule 23",
            "params": {
                "confidence_threshold": 0.95
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438430
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033032000,
            "description": "",
            "id": 6334,
            "input_fields": [
                438430
            ],
            "name": "Rule 24",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438431
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033040000,
            "description": "",
            "id": 6335,
            "input_fields": [
                438431
            ],
            "name": "Rule 25",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438432
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033049000,
            "description": "",
            "id": 6336,
            "input_fields": [
                438432
            ],
            "name": "Rule 26",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438433
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033058000,
            "description": "",
            "id": 6337,
            "input_fields": [
                438433
            ],
            "name": "Rule 27",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438434
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033068000,
            "description": "",
            "id": 6338,
            "input_fields": [
                438434
            ],
            "name": "Rule 28",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438435
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033077000,
            "description": "",
            "id": 6339,
            "input_fields": [
                438435
            ],
            "name": "Rule 29",
            "params": {
                "confidence_threshold": 0.85
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438309
            ],
            "alert_level": "FAILURE",
            "created_at": 1740026961000,
            "description": "",
            "id": 6312,
            "input_fields": [
                438309
            ],
            "name": "Rule 3",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438590
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033086000,
            "description": "",
            "id": 6340,
            "input_fields": [
                438590
            ],
            "name": "Rule 30",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438591
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033095000,
            "description": "",
            "id": 6341,
            "input_fields": [
                438591
            ],
            "name": "Rule 31",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438593
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033104000,
            "description": "",
            "id": 6342,
            "input_fields": [
                438593
            ],
            "name": "Rule 32",
            "params": {
                "confidence_threshold": 0.86
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438592
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033115000,
            "description": "",
            "id": 6343,
            "input_fields": [
                438592
            ],
            "name": "Rule 33",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438594
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033127000,
            "description": "",
            "id": 6344,
            "input_fields": [
                438594
            ],
            "name": "Rule 34",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438595
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033136000,
            "description": "",
            "id": 6345,
            "input_fields": [
                438595
            ],
            "name": "Rule 35",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438606
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033145000,
            "description": "",
            "id": 6346,
            "input_fields": [
                438606
            ],
            "name": "Rule 36",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438607
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033154000,
            "description": "",
            "id": 6347,
            "input_fields": [
                438607
            ],
            "name": "Rule 37",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257565000
        },
        {
            "affected_fields": [
                438608
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033167000,
            "description": "",
            "id": 6348,
            "input_fields": [
                438608
            ],
            "name": "Rule 38",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257566000
        },
        {
            "affected_fields": [
                438657
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033177000,
            "description": "",
            "id": 6349,
            "input_fields": [
                438657
            ],
            "name": "Rule 39",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257566000
        },
        {
            "affected_fields": [
                438310
            ],
            "alert_level": "FAILURE",
            "created_at": 1740026972000,
            "description": "",
            "id": 6313,
            "input_fields": [
                438310
            ],
            "name": "Rule 4",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438759
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033187000,
            "description": "",
            "id": 6350,
            "input_fields": [
                438759
            ],
            "name": "Rule 40",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257566000
        },
        {
            "affected_fields": [
                438760
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033199000,
            "description": "",
            "id": 6351,
            "input_fields": [
                438760
            ],
            "name": "Rule 41",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257566000
        },
        {
            "affected_fields": [
                438761
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033211000,
            "description": "",
            "id": 6352,
            "input_fields": [
                438761
            ],
            "name": "Rule 42",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257566000
        },
        {
            "affected_fields": [
                438770
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033229000,
            "description": "",
            "id": 6353,
            "input_fields": [
                438770
            ],
            "name": "Rule 43",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257566000
        },
        {
            "affected_fields": [
                438763
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033239000,
            "description": "",
            "id": 6354,
            "input_fields": [
                438763
            ],
            "name": "Rule 44",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257566000
        },
        {
            "affected_fields": [
                438764
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033248000,
            "description": "",
            "id": 6355,
            "input_fields": [
                438764
            ],
            "name": "Rule 45",
            "params": {
                "confidence_threshold": 0.89
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257566000
        },
        {
            "affected_fields": [
                438766
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033258000,
            "description": "",
            "id": 6356,
            "input_fields": [
                438766
            ],
            "name": "Rule 46",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257566000
        },
        {
            "affected_fields": [
                438768
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033267000,
            "description": "",
            "id": 6357,
            "input_fields": [
                438768
            ],
            "name": "Rule 47",
            "params": {
                "confidence_threshold": 0.89
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257566000
        },
        {
            "affected_fields": [
                432852
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033964000,
            "description": "",
            "id": 6360,
            "input_fields": [
                432852
            ],
            "name": "Rule 48",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257586000
        },
        {
            "affected_fields": [
                438774
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033975000,
            "description": "",
            "id": 6361,
            "input_fields": [
                438774
            ],
            "name": "Rule 49",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257586000
        },
        {
            "affected_fields": [
                438311
            ],
            "alert_level": "FAILURE",
            "created_at": 1740026980000,
            "description": "",
            "id": 6314,
            "input_fields": [
                438311
            ],
            "name": "Rule 5",
            "params": {
                "confidence_threshold": 0.87
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438775
            ],
            "alert_level": "FAILURE",
            "created_at": 1740033985000,
            "description": "",
            "id": 6362,
            "input_fields": [
                438775
            ],
            "name": "Rule 50",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257586000
        },
        {
            "affected_fields": [
                438777
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034001000,
            "description": "",
            "id": 6363,
            "input_fields": [
                438777
            ],
            "name": "Rule 51",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257586000
        },
        {
            "affected_fields": [
                438778
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034012000,
            "description": "",
            "id": 6364,
            "input_fields": [
                438778
            ],
            "name": "Rule 52",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257586000
        },
        {
            "affected_fields": [
                438780
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034022000,
            "description": "",
            "id": 6365,
            "input_fields": [
                438780
            ],
            "name": "Rule 53",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257586000
        },
        {
            "affected_fields": [
                438782
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034031000,
            "description": "",
            "id": 6366,
            "input_fields": [
                438782
            ],
            "name": "Rule 54",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257586000
        },
        {
            "affected_fields": [
                438783
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034040000,
            "description": "",
            "id": 6367,
            "input_fields": [
                438783
            ],
            "name": "Rule 55",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257586000
        },
        {
            "affected_fields": [
                438785
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034050000,
            "description": "",
            "id": 6368,
            "input_fields": [
                438785
            ],
            "name": "Rule 56",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257586000
        },
        {
            "affected_fields": [
                438835
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034060000,
            "description": "",
            "id": 6369,
            "input_fields": [
                438835
            ],
            "name": "Rule 57",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257586000
        },
        {
            "affected_fields": [
                438836
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034070000,
            "description": "",
            "id": 6370,
            "input_fields": [
                438836
            ],
            "name": "Rule 58",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257586000
        },
        {
            "affected_fields": [
                438837
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034079000,
            "description": "",
            "id": 6371,
            "input_fields": [
                438837
            ],
            "name": "Rule 59",
            "params": {
                "confidence_threshold": 0.95
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257586000
        },
        {
            "affected_fields": [
                438312
            ],
            "alert_level": "FAILURE",
            "created_at": 1740026991000,
            "description": "",
            "id": 6315,
            "input_fields": [
                438312
            ],
            "name": "Rule 6",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438838
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034091000,
            "description": "",
            "id": 6372,
            "input_fields": [
                438838
            ],
            "name": "Rule 60",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257586000
        },
        {
            "affected_fields": [
                438839
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034101000,
            "description": "",
            "id": 6373,
            "input_fields": [
                438839
            ],
            "name": "Rule 61",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257587000
        },
        {
            "affected_fields": [
                438840
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034112000,
            "description": "",
            "id": 6374,
            "input_fields": [
                438840
            ],
            "name": "Rule 62",
            "params": {
                "confidence_threshold": 0.95
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257587000
        },
        {
            "affected_fields": [
                438841
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034121000,
            "description": "",
            "id": 6375,
            "input_fields": [
                438841
            ],
            "name": "Rule 63",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257587000
        },
        {
            "affected_fields": [
                438842
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034129000,
            "description": "",
            "id": 6376,
            "input_fields": [
                438842
            ],
            "name": "Rule 64",
            "params": {
                "confidence_threshold": 0.95
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257587000
        },
        {
            "affected_fields": [
                438843
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034883000,
            "description": "",
            "id": 6378,
            "input_fields": [
                438843
            ],
            "name": "Rule 65",
            "params": {
                "confidence_threshold": 0.88
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257604000
        },
        {
            "affected_fields": [
                438844
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034892000,
            "description": "",
            "id": 6379,
            "input_fields": [
                438844
            ],
            "name": "Rule 66",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257604000
        },
        {
            "affected_fields": [
                438845
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034900000,
            "description": "",
            "id": 6380,
            "input_fields": [
                438845
            ],
            "name": "Rule 67",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257604000
        },
        {
            "affected_fields": [
                438846
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034909000,
            "description": "",
            "id": 6381,
            "input_fields": [
                438846
            ],
            "name": "Rule 68",
            "params": {
                "confidence_threshold": 0.95
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257604000
        },
        {
            "affected_fields": [
                438847
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034917000,
            "description": "",
            "id": 6382,
            "input_fields": [
                438847
            ],
            "name": "Rule 69",
            "params": {
                "confidence_threshold": 0.95
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257604000
        },
        {
            "affected_fields": [
                438313
            ],
            "alert_level": "FAILURE",
            "created_at": 1740027002000,
            "description": "",
            "id": 6316,
            "input_fields": [
                438313
            ],
            "name": "Rule 7",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438848
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034926000,
            "description": "",
            "id": 6383,
            "input_fields": [
                438848
            ],
            "name": "Rule 70",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257604000
        },
        {
            "affected_fields": [
                438849
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034934000,
            "description": "",
            "id": 6384,
            "input_fields": [
                438849
            ],
            "name": "Rule 71",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257604000
        },
        {
            "affected_fields": [
                438850
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034944000,
            "description": "",
            "id": 6385,
            "input_fields": [
                438850
            ],
            "name": "Rule 72",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257604000
        },
        {
            "affected_fields": [
                438851
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034956000,
            "description": "",
            "id": 6386,
            "input_fields": [
                438851
            ],
            "name": "Rule 73",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257604000
        },
        {
            "affected_fields": [
                438852
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034965000,
            "description": "",
            "id": 6387,
            "input_fields": [
                438852
            ],
            "name": "Rule 74",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257604000
        },
        {
            "affected_fields": [
                438854
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034973000,
            "description": "",
            "id": 6388,
            "input_fields": [
                438854
            ],
            "name": "Rule 75",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257604000
        },
        {
            "affected_fields": [
                438855
            ],
            "alert_level": "FAILURE",
            "created_at": 1740034982000,
            "description": "",
            "id": 6389,
            "input_fields": [
                438855
            ],
            "name": "Rule 76",
            "params": {
                "confidence_threshold": 0.95
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257604000
        },
        {
            "affected_fields": [
                438906
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039667000,
            "description": "",
            "id": 6391,
            "input_fields": [
                438906
            ],
            "name": "Rule 77",
            "params": {
                "confidence_threshold": 0.95
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257626000
        },
        {
            "affected_fields": [
                438907
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039683000,
            "description": "",
            "id": 6392,
            "input_fields": [
                438907
            ],
            "name": "Rule 78",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257626000
        },
        {
            "affected_fields": [
                438908
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039695000,
            "description": "",
            "id": 6393,
            "input_fields": [
                438908
            ],
            "name": "Rule 79",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257626000
        },
        {
            "affected_fields": [
                438314
            ],
            "alert_level": "FAILURE",
            "created_at": 1740027016000,
            "description": "",
            "id": 6317,
            "input_fields": [
                438314
            ],
            "name": "Rule 8",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                438909
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039710000,
            "description": "",
            "id": 6394,
            "input_fields": [
                438909
            ],
            "name": "Rule 80",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257626000
        },
        {
            "affected_fields": [
                438910
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039725000,
            "description": "",
            "id": 6395,
            "input_fields": [
                438910
            ],
            "name": "Rule 81",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257626000
        },
        {
            "affected_fields": [
                438911
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039735000,
            "description": "",
            "id": 6396,
            "input_fields": [
                438911
            ],
            "name": "Rule 82",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                438912
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039747000,
            "description": "",
            "id": 6397,
            "input_fields": [
                438912
            ],
            "name": "Rule 83",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                438913
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039759000,
            "description": "",
            "id": 6398,
            "input_fields": [
                438913
            ],
            "name": "Rule 84",
            "params": {
                "confidence_threshold": 0.95
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                439010
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039770000,
            "description": "",
            "id": 6399,
            "input_fields": [
                439010
            ],
            "name": "Rule 85",
            "params": {
                "confidence_threshold": 0.95
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                439013
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039782000,
            "description": "",
            "id": 6400,
            "input_fields": [
                439013
            ],
            "name": "Rule 86",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                439014
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039792000,
            "description": "",
            "id": 6401,
            "input_fields": [
                439014
            ],
            "name": "Rule 87",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                439015
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039803000,
            "description": "",
            "id": 6402,
            "input_fields": [
                439015
            ],
            "name": "Rule 88",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                439017
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039815000,
            "description": "",
            "id": 6403,
            "input_fields": [
                439017
            ],
            "name": "Rule 89",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                438315
            ],
            "alert_level": "FAILURE",
            "created_at": 1740027027000,
            "description": "",
            "id": 6318,
            "input_fields": [
                438315
            ],
            "name": "Rule 9",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257564000
        },
        {
            "affected_fields": [
                439018
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039826000,
            "description": "",
            "id": 6404,
            "input_fields": [
                439018
            ],
            "name": "Rule 90",
            "params": {
                "confidence_threshold": 0.95
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                439020
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039839000,
            "description": "",
            "id": 6405,
            "input_fields": [
                439020
            ],
            "name": "Rule 91",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                439022
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039853000,
            "description": "",
            "id": 6406,
            "input_fields": [
                439022
            ],
            "name": "Rule 92",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                439025
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039875000,
            "description": "",
            "id": 6407,
            "input_fields": [
                439025
            ],
            "name": "Rule 93",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                439027
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039887000,
            "description": "",
            "id": 6408,
            "input_fields": [
                439027
            ],
            "name": "Rule 94",
            "params": {
                "confidence_threshold": 0.95
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                439028
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039901000,
            "description": "",
            "id": 6409,
            "input_fields": [
                439028
            ],
            "name": "Rule 95",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                439030
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039916000,
            "description": "",
            "id": 6410,
            "input_fields": [
                439030
            ],
            "name": "Rule 96",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                439031
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039928000,
            "description": "",
            "id": 6411,
            "input_fields": [
                439031
            ],
            "name": "Rule 97",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                439144
            ],
            "alert_level": "FAILURE",
            "created_at": 1740039941000,
            "description": "",
            "id": 6412,
            "input_fields": [
                439144
            ],
            "name": "Rule 98",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257627000
        },
        {
            "affected_fields": [
                440120
            ],
            "alert_level": "FAILURE",
            "created_at": 1740041842000,
            "description": "",
            "id": 6417,
            "input_fields": [
                440120
            ],
            "name": "Rule 99",
            "params": {
                "confidence_threshold": 0.9
            },
            "scope": "FIELD",
            "type": "CONFIDENCE",
            "updated_at": 1741257628000
        }
    ],
    "reader_profile": {
        "createdBy": "",
        "createdOn": 1739817532809,
        "defaultProfile": "",
        "foundationVersion": "",
        "inputPath": null,
        "lastModifiedBy": "",
        "lastModifiedOn": 1739817532809,
        "outputPath": null,
        "profiles": [
            {
                "entitySettings": [],
                "name": "aihub",
                "readSettings": {
                    "add_barcode_identifier": true,
                    "cache_pdf_results": false,
                    "correct_inversion": false,
                    "correct_orientation": false,
                    "correct_resolution": false,
                    "correct_resolution_auto": false,
                    "detect_barcodes": false,
                    "detect_blurry_files": false,
                    "dewarp_page": true,
                    "document_mapping": "document_is_record_skip_empty_page",
                    "enable_ibdoc_v2": true,
                    "enable_paragraph_ordering": false,
                    "enable_table_markdown_enrichment": false,
                    "encryption_config": null,
                    "entity_models": [
                        {
                            "model_name": "signature_model",
                            "model_version": "0.0.4"
                        },
                        {
                            "model_name": "barcode_qrcode_detection",
                            "model_version": "1.0.0"
                        }
                    ],
                    "extract_all_pdf_layers": false,
                    "find_lines": false,
                    "fonts": null,
                    "force_image_ocr": true,
                    "image_filters": null,
                    "languages": [
                        "en"
                    ],
                    "layout_algorithm": "layout_algo_spatial",
                    "model_specific_settings": {
                        "marx_v1": {
                            "version": "layout_v3"
                        }
                    },
                    "native_excel_processing": true,
                    "ocr_page_type": "marx",
                    "ocr_timeout": null,
                    "output_format_layout": "layout_per_page",
                    "output_formats": null,
                    "page_range_str": "",
                    "preprocess_excel_files": false,
                    "process_type": "auto_to_txt",
                    "produce_metadata_list": true,
                    "produce_word_metadata": true,
                    "remove_boxes": false,
                    "remove_boxes_over_height_percent": null,
                    "remove_boxes_over_width_percent": null,
                    "remove_space_wordpolys": true,
                    "remove_vertical_text": false,
                    "reorient_words": false,
                    "repair_pdfs": false,
                    "scripts_dir": "",
                    "write_converted_image": true,
                    "write_thumbnail": true
                }
            }
        ],
        "schema": "1"
    }
}